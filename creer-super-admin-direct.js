#!/usr/bin/env node

/**
 * Script pour cr√©er le compte Super Admin directement via l'API Supabase
 * Utilise les credentials fournis par l'utilisateur
 */

import { createClient } from '@supabase/supabase-js';

// Configuration Supabase
const SUPABASE_URL = 'https://xfxqwlbqysiezqdpeqpv.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InhmeHF3bGJxeXNpZXpxZHBlcXB2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjAyMDYyNjgsImV4cCI6MjA3NTc4MjI2OH0.0DobXhl43BgOeUMKEmyWyYkM7Iuwc_cBhD7mYCZMO8k';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function createSuperAdminAccount() {
  console.log('üîß Cr√©ation du compte Super Admin...');
  console.log('====================================');

  try {
    // 1. V√©rifier si le compte existe d√©j√†
    console.log('üîç V√©rification de l\'existence du compte...');
    
    const { data: existingProfile, error: profileError } = await supabase
      .from('profiles')
      .select('id, email, full_name, phone')
      .eq('email', '33661002616@ndjobi.com');

    if (profileError) {
      console.error('‚ùå Erreur lors de la v√©rification:', profileError);
      return;
    }

    if (existingProfile && existingProfile.length > 0) {
      console.log('‚ö†Ô∏è  Le compte Super Admin existe d√©j√†:');
      console.log('   Email:', existingProfile[0].email);
      console.log('   Nom:', existingProfile[0].full_name);
      console.log('   T√©l√©phone:', existingProfile[0].phone);
      
      // V√©rifier le r√¥le
      const { data: roleData, error: roleError } = await supabase
        .from('user_roles')
        .select('role')
        .eq('user_id', existingProfile[0].id);

      if (roleData && roleData.length > 0) {
        console.log('   R√¥le:', roleData[0].role);
      }
      
      console.log('‚úÖ Le compte Super Admin est d√©j√† configur√© !');
      return;
    }

    console.log('üìù Le compte Super Admin n\'existe pas, cr√©ation en cours...');

    // 2. Cr√©er le compte via l'API Supabase
    const { data: authData, error: authError } = await supabase.auth.signUp({
      email: '33661002616@ndjobi.com',
      password: '999999',
      phone: '+33661002616',
      options: {
        data: {
          full_name: 'Super Administrateur',
          phone: '+33661002616',
          organization: 'Administration Syst√®me'
        }
      }
    });

    if (authError) {
      console.error('‚ùå Erreur lors de la cr√©ation du compte auth:', authError);
      return;
    }

    if (!authData.user) {
      console.error('‚ùå Aucun utilisateur cr√©√©');
      return;
    }

    console.log('‚úÖ Compte auth cr√©√© avec ID:', authData.user.id);

    // 3. Cr√©er le profil
    const { data: profileData, error: profileCreateError } = await supabase
      .from('profiles')
      .insert({
        id: authData.user.id,
        email: '33661002616@ndjobi.com',
        full_name: 'Super Administrateur',
        phone: '+33661002616',
        organization: 'Administration Syst√®me'
      })
      .select();

    if (profileCreateError) {
      console.error('‚ùå Erreur lors de la cr√©ation du profil:', profileCreateError);
      return;
    }

    console.log('‚úÖ Profil cr√©√©:', profileData[0]);

    // 4. Attribuer le r√¥le super_admin
    const { data: roleData, error: roleCreateError } = await supabase
      .from('user_roles')
      .insert({
        user_id: authData.user.id,
        role: 'super_admin'
      })
      .select();

    if (roleCreateError) {
      console.error('‚ùå Erreur lors de l\'attribution du r√¥le:', roleCreateError);
      return;
    }

    console.log('‚úÖ R√¥le super_admin attribu√©:', roleData[0]);

    // 5. V√©rification finale
    console.log('');
    console.log('üéâ COMPTE SUPER ADMIN CR√â√â AVEC SUCC√àS !');
    console.log('==========================================');
    console.log('üìã Informations du compte :');
    console.log('   ‚Ä¢ Email: 33661002616@ndjobi.com');
    console.log('   ‚Ä¢ T√©l√©phone: +33661002616');
    console.log('   ‚Ä¢ PIN: 999999');
    console.log('   ‚Ä¢ R√¥le: super_admin');
    console.log('   ‚Ä¢ ID: ' + authData.user.id);
    console.log('');
    console.log('üéØ Le compte Super Admin est maintenant disponible pour :');
    console.log('   ‚Ä¢ Authentification avec num√©ro + PIN');
    console.log('   ‚Ä¢ Acc√®s au dashboard Super Admin');
    console.log('   ‚Ä¢ Gestion des utilisateurs et r√¥les');
    console.log('');
    console.log('üí° Testez maintenant la connexion Super Admin !');

  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

// Ex√©cuter le script
createSuperAdminAccount();
