version: '3.8'

services:
  api:
    build:
      context: .
      target: development
    container_name: iasted-api
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql+asyncpg://iasted:iasted_pass@postgres:5432/iasted_db
      - REDIS_URL=redis://redis:6379/0
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ./app:/app/app
      - ./tests:/app/tests
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - iasted-network
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine
    container_name: iasted-postgres
    environment:
      POSTGRES_USER: iasted
      POSTGRES_PASSWORD: iasted_pass
      POSTGRES_DB: iasted_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - iasted-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U iasted"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: iasted-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - iasted-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  rabbitmq:
    image: rabbitmq:3.13-management-alpine
    container_name: iasted-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - iasted-network
    restart: unless-stopped
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build:
      context: .
      target: development
    container_name: iasted-celery-worker
    command: celery -A app.core.celery_app worker --loglevel=info
    environment:
      - APP_ENV=development
      - DATABASE_URL=postgresql+asyncpg://iasted:iasted_pass@postgres:5432/iasted_db
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672/
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
    volumes:
      - ./app:/app/app
    depends_on:
      - postgres
      - redis
      - rabbitmq
    networks:
      - iasted-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: iasted-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - iasted-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: iasted-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - iasted-network
    restart: unless-stopped

networks:
  iasted-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
  prometheus_data:
  grafana_data:

